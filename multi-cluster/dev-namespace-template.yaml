#@ load("@ytt:data", "data")
---
#@ if data.values.tap.registry.type != "ecr":
apiVersion: v1
kind: Secret
metadata:
  namespace: #@ data.values.tap.devNamespace
  name: tap-registry
  annotations:
    secretgen.carvel.dev/image-pull-secret: ""
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: e30K
#@ end
---
apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: #@ data.values.tap.devNamespace
  #@ if data.values.tap.registry.type == "ecr":
  annotations:
    eks.amazonaws.com/role-arn: #@ data.values.tap.supply_chain.workload_arn
  #@ end
  name: default
#@ if data.values.tap.registry.type != "ecr":
secrets:
  - name: registry-credentials
imagePullSecrets:
  - name: registry-credentials
  - name: tap-registry
#@ end
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: #@ data.values.tap.devNamespace
  name: default-permit-deliverable
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deliverable
subjects:
  - kind: ServiceAccount
    name: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: #@ data.values.tap.devNamespace
  name: default-permit-workload
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: workload
subjects:
  - kind: ServiceAccount
    name: default